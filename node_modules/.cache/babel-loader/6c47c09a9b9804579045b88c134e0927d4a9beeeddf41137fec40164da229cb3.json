{"ast":null,"code":"var _jsxFileName = \"/Users/jennetsiriphone/Desktop/lab7/bitcoin/src/7-1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencies = ['USD', 'AUD', 'NZD', 'GBP', 'EUR', 'SGD'];\nfunction BitcoinRates() {\n  _s();\n  const [currency, setCurrency] = useState(currencies[0]);\n  const [bitcoinPrice, setBitcoinPrice] = useState(null);\n  useEffect(() => {\n    const fetchBitcoinPrice = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=${currency}`);\n        const data = await response.json();\n        setBitcoinPrice(data.bitcoin[currency]);\n      } catch (error) {\n        console.error('Error fetching Bitcoin price:', error);\n      }\n    };\n    fetchBitcoinPrice();\n    return () => {};\n  }, [currency]);\n  const options = currencies.map(curr => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: curr,\n    children: curr\n  }, curr, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BitcoinRates componentBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bitcoin Exchange Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose currency:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: currency,\n        onChange: e => setCurrency(e.target.value),\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), bitcoinPrice !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Bitcoin Price in \", currency, \": \", bitcoinPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(BitcoinRates, \"FoFcDOP/lnChENwzi9btni9YJTI=\");\n_c = BitcoinRates;\nexport default BitcoinRates;\nvar _c;\n$RefreshReg$(_c, \"BitcoinRates\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","currencies","BitcoinRates","_s","currency","setCurrency","bitcoinPrice","setBitcoinPrice","fetchBitcoinPrice","response","fetch","data","json","bitcoin","error","console","options","map","curr","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/jennetsiriphone/Desktop/lab7/bitcoin/src/7-1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst currencies = ['USD', 'AUD', 'NZD', 'GBP', 'EUR', 'SGD'];\n\nfunction BitcoinRates() {\n    const [currency, setCurrency] = useState(currencies[0]);\n    const [bitcoinPrice, setBitcoinPrice] = useState(null);\n    useEffect(() => {\n        const fetchBitcoinPrice = async () => {\n            try {\n                const response = await fetch(\n                    `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=${currency}`\n                );\n                const data = await response.json();\n                setBitcoinPrice(data.bitcoin[currency]);\n            } catch (error) {\n                console.error('Error fetching Bitcoin price:', error);\n            }\n        };\n        fetchBitcoinPrice();\n        return () => {\n        };\n    }, [currency]);\n    const options = currencies.map((curr) => (\n        <option value={curr} key={curr}>\n            {curr}\n        </option>\n    ));\n    return (\n        <div className=\"BitcoinRates componentBox\">\n            <h3>Bitcoin Exchange Rate</h3>\n            <label>\n                Choose currency:\n                <select value={currency} onChange={(e) => setCurrency(e.target.value)}>\n                    {options}\n                </select>\n            </label>\n            {bitcoinPrice !== null && (\n                <p>\n                    Current Bitcoin Price in {currency}: {bitcoinPrice}\n                </p>\n            )}\n        </div>\n    );\n}\n\nexport default BitcoinRates;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAE7D,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtDC,SAAS,CAAC,MAAM;IACZ,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,2EAA0EN,QAAS,EACxF,CAAC;QACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAACE,OAAO,CAACT,QAAQ,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IACDN,iBAAiB,CAAC,CAAC;IACnB,OAAO,MAAM,CACb,CAAC;EACL,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd,MAAMY,OAAO,GAAGf,UAAU,CAACgB,GAAG,CAAEC,IAAI,iBAChClB,OAAA;IAAQmB,KAAK,EAAED,IAAK;IAAAE,QAAA,EACfF;EAAI,GADiBA,IAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CACX,CAAC;EACF,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,2BAA2B;IAAAL,QAAA,gBACtCpB,OAAA;MAAAoB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BxB,OAAA;MAAAoB,QAAA,GAAO,kBAEH,eAAApB,OAAA;QAAQmB,KAAK,EAAEf,QAAS;QAACsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE;QAAAC,QAAA,EACjEJ;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACPlB,YAAY,KAAK,IAAI,iBAClBN,OAAA;MAAAoB,QAAA,GAAG,2BAC0B,EAAChB,QAAQ,EAAC,IAAE,EAACE,YAAY;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACrB,EAAA,CAxCQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}