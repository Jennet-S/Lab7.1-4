{"ast":null,"code":"var _jsxFileName = \"/Users/jennetsiriphone/Desktop/lab7/bitcoin/src/EmojiContex.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiContext = /*#__PURE__*/createContext();\nexport const EmojiProvider = ({\n  children\n}) => {\n  _s();\n  const [isHappy, setIsHappy] = useState(true);\n  const toggleMood = () => {\n    setIsHappy(prevIsHappy => !prevIsHappy);\n  };\n  const contextValue = {\n    isHappy,\n    toggleMood\n  };\n  return /*#__PURE__*/_jsxDEV(EmojiContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(EmojiProvider, \"c121r5ntNbsxDvp+bZCgIgRRmFg=\");\n_c = EmojiProvider;\nexport const useEmoji = () => {\n  _s2();\n  const context = useContext(EmojiContext);\n  if (!context) {\n    throw new Error('useEmoji must be used within an EmojiProvider');\n  }\n  return context;\n};\n_s2(useEmoji, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EmojiProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","EmojiContext","EmojiProvider","children","_s","isHappy","setIsHappy","toggleMood","prevIsHappy","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEmoji","_s2","context","Error","$RefreshReg$"],"sources":["/Users/jennetsiriphone/Desktop/lab7/bitcoin/src/EmojiContex.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst EmojiContext = createContext();\n\nexport const EmojiProvider = ({ children }) => {\n  const [isHappy, setIsHappy] = useState(true);\n\n  const toggleMood = () => {\n    setIsHappy((prevIsHappy) => !prevIsHappy);\n  };\n\n  const contextValue = {\n    isHappy,\n    toggleMood,\n  };\n\n  return <EmojiContext.Provider value={contextValue}>{children}</EmojiContext.Provider>;\n};\n\nexport const useEmoji = () => {\n  const context = useContext(EmojiContext);\n\n  if (!context) {\n    throw new Error('useEmoji must be used within an EmojiProvider');\n  }\n\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBD,UAAU,CAAEE,WAAW,IAAK,CAACA,WAAW,CAAC;EAC3C,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBJ,OAAO;IACPE;EACF,CAAC;EAED,oBAAOP,OAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAN,QAAA,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AACvF,CAAC;AAACX,EAAA,CAbWF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAe1B,OAAO,MAAMe,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGtB,UAAU,CAACI,YAAY,CAAC;EAExC,IAAI,CAACkB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}